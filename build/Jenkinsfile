pipeline {
  agent {
    dockerfile {
      dir 'build'
      label 'docker && amd64'
      args '-v /var/run/docker.sock:/var/run/docker.sock -v /root/go/pkg/mod/cache:/root/go/pkg/mod/cache'
    }
  }
  environment {
    DOCKER_TAG = "chappio/clearcloud:${env.BUILD_TAG}"
    CGO_ENABLE = "0"
  }
  stages {
    stage('Test') {
      parallel {
        stage('Backend') {
          steps {
             sh "go mod download"
             sh "go test -v -coverprofile=coverage.out ./... 2>&1 | go-junit-report > junit.xml"
          }
          post {
            always {
              stash includes: 'coverage.out,junit.xml', name: 'backend-tests', useDefaultExcludes: false
              junit 'junit.xml'
            }
          }
        }
        stage('Frontend') {
          steps {
            sh 'yarn --cwd web install --frozen-lockfile'
            sh 'yarn --cwd web lint  -f json -o eslint-report.json || true'
            sh 'yarn --cwd web test --ci --coverage --reporters=default --reporters=jest-junit'
          }
          post {
            always {
              stash includes: 'web/coverage/lcov.info,web/eslint-report.json,web/junit.xml', name: 'frontend-tests', useDefaultExcludes: false
              junit 'web/junit.xml'
            }
          }
        }
      }
    }
    stage('Sonar') {
      environment {
        SONAR_LOGIN = credentials('SONAR_LOGIN')
      }
      steps {
        unstash 'frontend-tests'
        unstash 'backend-tests'
        script {
          if(env.CHANGE_ID) {
            sh "sonar-scanner -Dsonar.login='$SONAR_LOGIN' -Dsonar.pullrequest.key=${env.CHANGE_ID} -Dsonar.pullrequest.branch='${env.CHANGE_BRANCH}' -Dsonar.pullrequest.base='${env.CHANGE_TARGET}'"
          } else {
            sh "sonar-scanner -Dsonar.login='$SONAR_LOGIN' -Dsonar.branch.name='${env.BRANCH_NAME}'"
          }
        }
      }
    }
    stage('Build') {
      parallel {
        stage('Docker linux/amd64') {
          environment {
            DOCKER_LOGIN = credentials('DOCKER_LOGIN')
          }
          steps {
            sh 'yarn --cwd web install --frozen-lockfile'
            sh 'yarn --cwd web build'
            sh 'docker login --username $DOCKER_LOGIN_USR --password "$DOCKER_LOGIN_PSW"'
            sh 'docker build --tag tocabi/clearcloud:$BRANCH_NAME .'
            sh 'docker push tocabi/clearcloud:$BRANCH_NAME'
          }
        }
      }
    }
  }
}